# Author: John Gauthier
# Description: Swap written in Y86
# Sources: course/assignment material

init:
    irmovl Stack, %esp      # set up stack pointer
    irmovl Stack, %ebp      # Set up base pointer
    call Main               # Execute main program
    halt                    # Terminate program

#array of 4 elements
    .align 4
xp: .long 0x0001
yp: .long 0x0002

Main:
    pushl %ebp
    rrmovl %esp, %ebp
    irmovl yp, %eax
    pushl %eax,             # push yp
    irmovl xp, %eax
    pushl %eax              # push xp
    call Swap
    rrmovl %ebp, %esp
    popl %ebp
    ret
    
# int Swap(int *xp, int *yp)
Swap:
    pushl %ebp
    rrmovl %esp, %ebp
    pushl %ebx              # push %ebx

    mrmovl 8(%ebp), %ecx    # xp in %ecx
    mrmovl 12(%ebp), %edx   # yp in %edx

    mrmovl (%ecx), %eax     # *xp in %eax (t0) 
    mrmovl (%edx), %ebx     # *yp in %ebx (t1)

    rmmovl %eax, (%edx)     # t0 in yp
    rmmovl %ebx, (%ecx)     # t1 in xp
    
    popl %ebx               # pop %ebx
    popl %ebp
    ret

# The stack starts here and grows to lower addresses
    .pos 0x100
Stack:
